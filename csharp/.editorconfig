# top-most EditorConfig file
root = true

[*]
end_of_line  = crlf
indent_style = space

[*.{cs,xaml}]
indent_size              = 4
trim_trailing_whitespace = true
insert_final_newline     = true
charset                  = utf-8

###############################
# .NET Coding Conventions     #
###############################

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2017#formatting-conventions
# all enfoce default
[*.cs]
# Organize usings
dotnet_sort_system_directives_first                                      = true

# this. preferences
dotnet_style_qualification_for_field                                     = false : error
dotnet_style_qualification_for_property                                  = false : error
dotnet_style_qualification_for_method                                    = false : error
dotnet_style_qualification_for_event                                     = false : error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members               = true : error
dotnet_style_predefined_type_for_member_access                           = true : error

# Modifier preferences
dotnet_style_readonly_field                                              = false : suggestion
dotnet_style_prefer_conditional_expression_over_assignment               = true : suggestion
dotnet_style_prefer_conditional_expression_over_return                   = true : suggestion

###############################
# Naming Conventions          #
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization                     = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity        = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols         = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style           = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds                   = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities         = *
dotnet_naming_symbols.constant_fields.required_modifiers                 = const

###############################
# C# Coding Conventions       #
###############################

# var preferences
csharp_style_var_for_built_in_types                                      = true : error
csharp_style_var_when_type_is_apparent                                   = true : error

# Expression-bodied members
csharp_style_expression_bodied_methods                                   = false : warning
csharp_style_expression_bodied_constructors                              = false : warning
csharp_style_expression_bodied_operators                                 = false : warning
csharp_style_expression_bodied_properties                                = true : warning
csharp_style_expression_bodied_indexers                                  = true : warning
csharp_style_expression_bodied_accessors                                 = true : warning

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check                    = true : error
csharp_style_pattern_matching_over_as_with_null_check                    = true : error

# Null-checking preferences
csharp_style_throw_expression                                            = true : suggestion
csharp_style_conditional_delegate_call                                   = true : suggestion

# Expression-level preferences
csharp_prefer_braces                                                     = true : none
csharp_style_deconstructed_variable_declaration                          = true : error
csharp_prefer_simple_default_expression                                  = true : error
csharp_style_pattern_local_over_anonymous_function                       = true : error
csharp_style_inlined_variable_declaration                                = true : error


###############################
# C# Formatting Rules         #
###############################

# New line preferences
# default
csharp_new_line_before_open_brace                                        = all
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_between_query_expression_clauses                         = true

# Indentation preferences
# default
csharp_indent_case_contents                                              = true
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = flush_left

# Space preferences
# default
csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_parentheses                                         = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false

# Wrapping preferences
csharp_preserve_single_line_statements                                   = false
csharp_preserve_single_line_blocks                                       = true